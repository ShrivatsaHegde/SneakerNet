# https://docs.github.com/en/actions/reference/encrypted-secrets#using-encrypted-secrets-in-a-workflow
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: travis-docker
on: 
  push:
    branches:
      - docker-multistage

env:      
  DOCKER_PASSWORD: ${{  secrets.DOCKER_PASSWORD }}
  DOCKER_USERNAME: ${{  secrets.DOCKER_USERNAME }}
  CI_PROJECT_NAME: sneakernet

jobs:
  docker_build:
    
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: docker-multistage
          fetch-depth: 1
      - id:  test-not-so-secret-variable
        run: echo "logging in with ${DOCKER_USERNAME:0:6}"
      - id:  test-docker-tag
        run: echo "$CI_PROJECT_NAME:$GITHUB_SHA"
      - id:  test-other-vars
        run: echo "HOME:$HOME PWD:$PWD GITHUB_WORKSPACE:$GITHUB_WORKSPACE $GITHUB_ACTOR/$CI_PROJECT_NAME:$GITHUB_SHA"
      - id:  test-github-root
        run: ls -R $GITHUB_WORKSPACE
      - id:  see-if-git-dir-is-good
        run: ls -lha $GITHUB_WORKSPACE
      - id:  docker-build
        run: docker build -t $CI_PROJECT_NAME:$GITHUB_SHA $GITHUB_WORKSPACE

  docker_login:
    runs-on: ubuntu-18.04
    needs: docker_build
    steps:
      - id:  docker-login
        run: echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin

  docker_build_latest:
    runs-on: ubuntu-18.04
    needs: docker_login
    steps:
      - id:  debug env
        run: |
          echo $GITHUB_WORKSPACE
          ls $GITHUB_WORKSPACE
      - id:  docker-tag-latest
        run: |
          REMOTE_TAG=$(echo "$GITHUB_REPOSITORY:$GITHUB_SHA" | tr '[:upper:]' '[:lower:]')
          docker tag $CI_PROJECT_NAME:$GITHUB_SHA $REMOTE_TAG

# https://stackoverflow.com/questions/58475748/github-actions-how-to-check-if-current-push-has-new-tag-is-new-release
  docker_build_versioned:
    runs-on: ubuntu-18.04
    needs: docker_login
    steps:
      - id:  todo
        run: echo "TODO"

  docker_push:
    runs-on: ubuntu-18.04
    needs: [docker_build_latest, docker_build_versioned]
    steps:
      - id:  docker-push-latest
        run: docker push $CI_PROJECT_NAME:$GITHUB_SHA

