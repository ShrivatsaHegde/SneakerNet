name: unit-tests
on:
  push:
    branches: [master, dev, unit-test]

# perl: [ '5.32', '5.30', '5.28' ]
# perl: [ '5.32', '5.30.1', '5.16.3', '5.12.3' ]
# os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
# https://github.com/marketplace/actions/setup-perl-environment
#     - name: Set up perl
#       uses: shogo82148/actions-setup-perl@v1
#       with:
#         perl-version: ${{ matrix.perl }}
#   name: Perl ${{ matrix.perl }} on ${{ matrix.os }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest' ]
    name: System Perl on ${{ matrix.os }}
    steps:
      - name: checkout my repo
        uses: actions/checkout@v2
      - name: checkout CG-Pipeline
        uses: actions/checkout@v2
        with:
          repository: lskatz/CG-Pipeline
          path: CG-Pipeline
          ref:  v0.5
      - name: checkout Krona
        uses: actions/checkout@v2
        with:
          repository: marbl/krona
          path: krona
          ref:  v2.7.1
      - name: checkout Shovill
        uses: actions/checkout@v2
        with:
          repository: tseemann/shovill
          path: shovill
          ref:  v1.1.0
      - name: apt-get install
        run:  |
          sudo apt-get update
          sudo apt-get -y install tree libberkeleydb-perl libdb-dev bioperl perl cpanminus
          sudo apt-get -y install build-essential bioperl-run ncbi-blast+ prodigal sendmail python3 python3-pip
      - name: update alternatives for python3
        run:  |
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          sudo update-alternatives --set python /usr/bin/python3
          python --version
          pip3 --version
      - name: configure cpanm
        run:  |
          cpanm --local-lib=$HOME/perl5 local::lib
          perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
      - name: Dumper INC
        run:  perl -MData::Dumper -e 'print Dumper \@INC'
      - name: tree
        run: tree
      - run: perl -V
      - name: env
        run:  env
      - name: env with perl local lib
        run:  |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          env
      - name: install krona
        run:  |
          export PATH=$PATH:~/krona
          wget --progress=dot:mega --no-check-certificate https://github.com/marbl/Krona/archive/xl2.5.tar.gz
          tar zxvf xl2.5.tar.gz
          perl Krona-xl2.5/KronaTools/install.pl -prefix $HOME/krona
      - name: install-makemaker
        run: |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          cpanm -l $HOME/perl5 --verbose --notest --force ExtUtils::MakeMaker
          cpanm -l $HOME/perl5 --installdeps . --verbose --notest --force
      - name: perl-check-dependencies
        run:  |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          perl Makefile.PL
          make
          cpanm --installdeps . -l $HOME/perl5 --verbose --notest --force
          perl -MData::Dumper -MStatistics::Descriptive -MConfig::Simple -MFile::Slurp -MBio::Kmer -MBio::SeqIO -MText::Fuzzy -MEmail::Stuffer -MBio::FeatureIO -MMoo -MList::MoreUtils -MJSON -e 'print Dumper \%INC'
          make
          echo "DEBUG: PERL5LIB: $PERL5LIB"
      - name: check-mymeta
        run: |
          echo "MYMETA.json";
          cat MYMETA.json
      - id:   prove-lv-t
        name: prove-lv-t
        run:  |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          export PATH=$PATH:~/CG-Pipeline/scripts
          export PATH=$PATH:~/shovill-1.0.0/bin
          export PATH=$PATH:~/.local/bin
          export PATH=$PATH:~/krona
          prove -lv t

