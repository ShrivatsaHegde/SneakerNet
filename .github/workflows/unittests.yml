name: unit-tests
on: [push]

env:
  spadesVer: 3.14.1
  KRAKEN_DEFAULT_DB: /kraken-database
# perl: [ '5.32', '5.30', '5.28' ]
# perl: [ '5.32', '5.30.1', '5.16.3', '5.12.3' ]
# os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
# https://github.com/marketplace/actions/setup-perl-environment

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-18.04' ]
        perl: [ '5.34' ]
        python: [ '3.7' ]
    name: Perl ${{ matrix.perl }} on ${{ matrix.os }}
    steps:
      - name: add some paths to PATH
        run:  |
          echo "$GITHUB_WORKSPACE/CG-Pipeline/scripts" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/shovill/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/.local/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/krona" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/SPAdes-${spadesVer}-Linux/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/kmc" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/Lighter-1.1.1" >> $GITHUB_PATH
          echo
          cat $GITHUB_PATH
      - name: set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          use-mamba: true
          channels: conda-forge,bioconda,defaults
          mamba-version: "*"
          auto-activate-base: true
          activate-environment: ""
      - name: conda installations
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          mamba install -y skesa spades krona shovill samclip flash seqtk kmc lighter megahit pilon trimmomatic perl-bioperl
          conda list
      - name: test conda
        shell: bash -el {0}
        run: |
          which conda
          which mamba
          conda info --envs
          shovill --help
      - name: checkout my repo
        uses: actions/checkout@v2
        with:
          path: SneakerNet
      - name: checkout CG-Pipeline
        uses: actions/checkout@v2
        with:
          repository: lskatz/CG-Pipeline
          path: CG-Pipeline
          ref:  v0.5
      - name: apt-get install
        run:  |
          sudo apt-get update
          sudo apt-get -y install libgd-dev ca-certificates
          sudo apt-get -y install tree libberkeleydb-perl libdb-dev cpanminus curl 
          sudo apt-get -y install build-essential ncbi-blast+ prodigal sendmail 
          # shovill things
          sudo apt-get -y install bwa velvet wget pigz libncurses5-dev libbz2-dev liblzma-dev libfindbin-libs-perl trimmomatic
      - name: update alternatives for python3
        run:  |
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          sudo update-alternatives --set python /usr/bin/python3
          python --version
          pip3 --version
      - name: install jellyfish1
        run:  |
          cd $GITHUB_WORKSPACE
          wget https://github.com/gmarcais/Jellyfish/releases/download/v1.1.12/jellyfish-1.1.12.tar.gz
          tar -zxf jellyfish-1.1.12.tar.gz
          cd jellyfish-1.1.12
          ./configure --prefix=/opt/jellyfish-1.1.12
          make -j 2
          sudo make install
          export PATH=$PATH:/opt/jellyfish-1.1.12/bin
          echo "/opt/jellyfish-1.1.12/bin" >> $GITHUB_PATH
          which jellyfish
      - name: install kraken1
        run:  |
          cd $GITHUB_WORKSPACE
          wget https://github.com/DerrickWood/kraken/archive/v1.1.1.tar.gz -O kraken-v1.1.1.tar.gz
          tar -xvzf kraken-v1.1.1.tar.gz
          cd kraken-1.1.1
          mkdir /opt/kraken
          ./install_kraken.sh /opt/kraken/
          export PATH=$PATH:/opt/kraken
          echo "/opt/kraken/" >> $GITHUB_PATH
          which kraken
      - name: install minikraken
        run: |
          sudo mkdir -v /kraken-database
          cd /kraken-database
          sudo wget https://ccb.jhu.edu/software/kraken/dl/minikraken_20171101_4GB_dustmasked.tgz
          sudo tar -zxf minikraken_20171101_4GB_dustmasked.tgz
          sudo mv -nv minikraken_20171101_4GB_dustmasked/* . # flatten db dir
          sudo ls -lhSR /kraken-database
      - name: configure cpanm
        run:  |
          cpanm --local-lib=$HOME/perl5 local::lib
          perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
      - name: Dumper INC
        run:  perl -MData::Dumper -e 'print Dumper \@INC'
      - name: tree pwd
        run:  tree $(pwd)
      - name: tree home
        run:  tree $HOME
      - name: tree GITHUB_WORKSPACE
        run:  tree $GITHUB_WORKSPACE
      - name: tree -L 3 -d GITHUB_WORKSPACE
        run:  tree -L 3 -d $GITHUB_WORKSPACE
      - run: perl -V
      - name: env
        run:  env
      - name: env with perl local lib
        run:  |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          env
      - name: install-makemaker
        run: |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          #perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib | perl -plane 's/export .*//' >> $GITHUB_ENV
          echo "PERL5LIB=$PERL5LIB" >> $GITHUB_ENV
          echo "PERL_MB_OPT=$PERL_MB_OPT" >> $GITHUB_ENV
          echo "PERL_MM_OPT=$PERL_MM_OPT" >> $GITHUB_ENV
          echo 
          echo GITHUG_ENV
          cat $GITHUB_ENV
          echo
          cd SneakerNet
          cpanm -l $HOME/perl5 --verbose --notest --force ExtUtils::MakeMaker
          cpanm -l $HOME/perl5 --installdeps . --verbose --notest --force
      - name: perl-check-dependencies
        shell: bash -el {0}
        run:  |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          cd $GITHUB_WORKSPACE/SneakerNet
          perl Makefile.PL
          make
          cpanm --installdeps . -l /usr/share/miniconda --verbose --notest --force
          cpanm -l /usr/share/miniconda --verbose --notest --force -MFile::Slurp 
          echo
          find -/usr/share/miniconda -name Slurp.pm
          echo
          perl -MData::Dumper -MStatistics::Descriptive -MConfig::Simple -MFile::Slurp -MBio::Kmer -MBio::SeqIO -MText::Fuzzy -MEmail::Stuffer -MBio::FeatureIO -MMoo -MList::MoreUtils -MJSON -e 'print Dumper \%INC'
          make
          echo "DEBUG: PERL5LIB: $PERL5LIB"
      - name: check-SneakerNet-repo
        shell: bash -el {0}
        run: |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          cd $GITHUB_WORKSPACE/SneakerNet
          cat MYMETA.json
          echo;env;echo
          ls -lhS t/M00123-18-001-test/
          md5sum t/M00123-18-001-test/*.fastq.gz
          for i in t/M00123-18-001-test/*.fastq.gz; do echo -ne "$i\t"; zcat $i | tail -n 1; done;
          echo
          echo "PATH broken up:"
          echo "$PATH" | tr ":" "\n"
          echo
          echo "GITHUB_ENV: $GITHUB_ENV"
          cat $GITHUB_ENV
          echo "GITHUB_PATH: $GITHUB_PATH"
          cat $GITHUB_PATH
          echo "Which flash:"
          which flash
          echo
          echo "Running t/00_env.t ..."
          perl t/00_env.t
          for i in t/M00123-18-001-test/*.fastq.gz; do echo -ne "$i\t"; zcat $i | tail -n 1; done;
      - id:   prove-lv-t
        name: prove-lv-t
        shell: bash -el {0}
        run:  |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          mkdir -v $GITHUB_WORKSPACE/tmp
          export TMPDIR=$GITHUB_WORKSPACE/tmp
          cd $GITHUB_WORKSPACE/SneakerNet
          sed -i 's+/opt/kraken/full-20140723+/kraken-database+g' config/settings.conf
          #prove -lv t
          make
          make test


